// <auto-generated />
using System;
using EmployeeDirectoryAPI.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmployeeDirectoryAPI.Migrations
{
    [DbContext(typeof(EmployeeDbContext))]
    [Migration("20181225095628_EmployeeDirectoryDB")]
    partial class EmployeeDirectoryDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EmployeeDirectoryAPI.Entities.BirthdayMessages", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MessageData")
                        .IsRequired()
                        .HasMaxLength(350);

                    b.HasKey("MessageId");

                    b.ToTable("BirthdayMessages");
                });

            modelBuilder.Entity("EmployeeDirectoryAPI.Entities.ContactDetails", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("FBLink");

                    b.Property<string>("GitHubLink");

                    b.Property<int>("MobNumberOff")
                        .HasMaxLength(10);

                    b.Property<int>("MobNumberPersonal")
                        .HasMaxLength(10);

                    b.Property<string>("SkypeID")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("SlackID");

                    b.Property<string>("TwitterLink");

                    b.Property<string>("linkdinLink");

                    b.HasKey("ContactId");

                    b.ToTable("ContactDetails");
                });

            modelBuilder.Entity("EmployeeDirectoryAPI.Entities.DepartmentDetails", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentDiscription")
                        .HasMaxLength(100);

                    b.Property<string>("DepartmentHeadName")
                        .HasMaxLength(20);

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("DepartmentId");

                    b.ToTable("DepartmentDetails");
                });

            modelBuilder.Entity("EmployeeDirectoryAPI.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BioId");

                    b.Property<int>("ContactId");

                    b.Property<int?>("DepartmentId");

                    b.Property<DateTime>("Dob")
                        .HasMaxLength(10);

                    b.Property<string>("EmailID")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("EmployeePhotoURL")
                        .HasMaxLength(300);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime>("JoiningDate");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("RoleId")
                        .HasMaxLength(20);

                    b.Property<int?>("TeamID");

                    b.HasKey("EmployeeId");

                    b.HasIndex("BioId");

                    b.HasIndex("ContactId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RoleId");

                    b.HasIndex("TeamID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmployeeDirectoryAPI.Entities.EmployeeBiography", b =>
                {
                    b.Property<int>("BioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("About")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Hobbies")
                        .HasMaxLength(100);

                    b.Property<string>("Interests")
                        .HasMaxLength(100);

                    b.HasKey("BioId");

                    b.ToTable("EmployeeBiographies");
                });

            modelBuilder.Entity("EmployeeDirectoryAPI.Entities.EmployeeRoles", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.HasKey("RoleId");

                    b.ToTable("EmployeeRoles");
                });

            modelBuilder.Entity("EmployeeDirectoryAPI.Entities.EmployeeSkills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId");

                    b.Property<int>("SkillId");

                    b.Property<string>("SkillLevel")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SkillId");

                    b.ToTable("EmployeeSkills");
                });

            modelBuilder.Entity("EmployeeDirectoryAPI.Entities.EventsDetails", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EvenPhotoURL")
                        .HasMaxLength(250);

                    b.Property<DateTime>("EventDate");

                    b.Property<DateTime>("EventFromTime");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("EventTimeZone");

                    b.Property<DateTime>("EventToTime");

                    b.Property<string>("Organizer")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Venu")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("EventId");

                    b.ToTable("EventsDetails");
                });

            modelBuilder.Entity("EmployeeDirectoryAPI.Entities.Skills", b =>
                {
                    b.Property<int>("SkillID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("SkillID");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("EmployeeDirectoryAPI.Entities.TeamDetails", b =>
                {
                    b.Property<int>("TeamID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TeamDiscription")
                        .HasMaxLength(100);

                    b.Property<string>("TeamLeadName")
                        .HasMaxLength(20);

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("TeamID");

                    b.ToTable("TeamDetails");
                });

            modelBuilder.Entity("EmployeeDirectoryAPI.Entities.Employee", b =>
                {
                    b.HasOne("EmployeeDirectoryAPI.Entities.EmployeeBiography", "EmployeeBiography")
                        .WithMany()
                        .HasForeignKey("BioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EmployeeDirectoryAPI.Entities.ContactDetails", "ContactDetails")
                        .WithMany()
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EmployeeDirectoryAPI.Entities.DepartmentDetails", "DepartmentDetails")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("EmployeeDirectoryAPI.Entities.EmployeeRoles", "employeeRoles")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EmployeeDirectoryAPI.Entities.TeamDetails", "TeamDetails")
                        .WithMany()
                        .HasForeignKey("TeamID");
                });

            modelBuilder.Entity("EmployeeDirectoryAPI.Entities.EmployeeSkills", b =>
                {
                    b.HasOne("EmployeeDirectoryAPI.Entities.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EmployeeDirectoryAPI.Entities.Skills", "skills")
                        .WithMany("EmployeeSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
